Conversations
Create and manage conversations to store and retrieve conversation state across Response API calls.

Create a conversation
post
 
https://api.openai.com/v1/conversations
Create a conversation.

Request body
items
array or null

Optional
Initial items to include in the conversation context. You may add up to 20 items at a time.


Hide possible types
Input message
object
A message input to the model with a role indicating instruction following hierarchy. Instructions given with the developer or system role take precedence over instructions given with the user role. Messages with the assistant role are presumed to have been generated by the model in previous interactions.


Hide properties
content
string or array

Required
Text, image, or audio input to the model, used to generate a response. Can also contain previous assistant responses.


Hide possible types
Text input
string
A text input to the model.

Input item content list
array
A list of one or many input items to the model, containing different content types.


Hide possible types
Input text
object
A text input to the model.


Hide properties
text
string

Required
The text input to the model.

type
string

Required
The type of the input item. Always input_text.

Input image
object
An image input to the model. Learn about image inputs.


Hide properties
detail
string

Required
The detail level of the image to be sent to the model. One of high, low, or auto. Defaults to auto.

type
string

Required
The type of the input item. Always input_image.

file_id
string

Optional
The ID of the file to be sent to the model.

image_url
string

Optional
The URL of the image to be sent to the model. A fully qualified URL or base64 encoded image in a data URL.

Input file
object
A file input to the model.


Hide properties
type
string

Required
The type of the input item. Always input_file.

file_data
string

Optional
The content of the file to be sent to the model.

file_id
string

Optional
The ID of the file to be sent to the model.

file_url
string

Optional
The URL of the file to be sent to the model.

filename
string

Optional
The name of the file to be sent to the model.

Input audio
object
An audio input to the model.


Hide properties
input_audio
object

Required

Hide properties
data
string

Required
Base64-encoded audio data.

format
string

Required
The format of the audio data. Currently supported formats are mp3 and wav.

type
string

Required
The type of the input item. Always input_audio.

role
string

Required
The role of the message input. One of user, assistant, system, or developer.

type
string

Optional
The type of the message input. Always message.

Item
object
An item representing part of the context for the response to be generated by the model. Can contain text, images, and audio inputs, as well as previous assistant responses and tool call outputs.


Hide possible types
Input message
object
A message input to the model with a role indicating instruction following hierarchy. Instructions given with the developer or system role take precedence over instructions given with the user role.


Hide properties
content
array

Required
A list of one or many input items to the model, containing different content types.


Hide possible types
Input text
object
A text input to the model.


Hide properties
text
string

Required
The text input to the model.

type
string

Required
The type of the input item. Always input_text.

Input image
object
An image input to the model. Learn about image inputs.


Hide properties
detail
string

Required
The detail level of the image to be sent to the model. One of high, low, or auto. Defaults to auto.

type
string

Required
The type of the input item. Always input_image.

file_id
string

Optional
The ID of the file to be sent to the model.

image_url
string

Optional
The URL of the image to be sent to the model. A fully qualified URL or base64 encoded image in a data URL.

Input file
object
A file input to the model.


Hide properties
type
string

Required
The type of the input item. Always input_file.

file_data
string

Optional
The content of the file to be sent to the model.

file_id
string

Optional
The ID of the file to be sent to the model.

file_url
string

Optional
The URL of the file to be sent to the model.

filename
string

Optional
The name of the file to be sent to the model.

Input audio
object
An audio input to the model.


Hide properties
input_audio
object

Required

Hide properties
data
string

Required
Base64-encoded audio data.

format
string

Required
The format of the audio data. Currently supported formats are mp3 and wav.

type
string

Required
The type of the input item. Always input_audio.

role
string

Required
The role of the message input. One of user, system, or developer.

status
string

Optional
The status of item. One of in_progress, completed, or incomplete. Populated when items are returned via API.

type
string

Optional
The type of the message input. Always set to message.

Output message
object
An output message from the model.


Hide properties
content
array

Required
The content of the output message.


Hide possible types
Output text
object
A text output from the model.


Hide properties
annotations
array

Required
The annotations of the text output.


Hide possible types
File citation
object
A citation to a file.


Hide properties
file_id
string

Required
The ID of the file.

filename
string

Required
The filename of the file cited.

index
integer

Required
The index of the file in the list of files.

type
string

Required
The type of the file citation. Always file_citation.

URL citation
object
A citation for a web resource used to generate a model response.


Hide properties
end_index
integer

Required
The index of the last character of the URL citation in the message.

start_index
integer

Required
The index of the first character of the URL citation in the message.

title
string

Required
The title of the web resource.

type
string

Required
The type of the URL citation. Always url_citation.

url
string

Required
The URL of the web resource.

Container file citation
object
A citation for a container file used to generate a model response.


Hide properties
container_id
string

Required
The ID of the container file.

end_index
integer

Required
The index of the last character of the container file citation in the message.

file_id
string

Required
The ID of the file.

filename
string

Required
The filename of the container file cited.

start_index
integer

Required
The index of the first character of the container file citation in the message.

type
string

Required
The type of the container file citation. Always container_file_citation.

File path
object
A path to a file.


Hide properties
file_id
string

Required
The ID of the file.

index
integer

Required
The index of the file in the list of files.

type
string

Required
The type of the file path. Always file_path.

text
string

Required
The text output from the model.

type
string

Required
The type of the output text. Always output_text.

logprobs
array

Optional

Hide properties
bytes
array

Required
logprob
number

Required
token
string

Required
top_logprobs
array

Required

Hide properties
bytes
array

Required
logprob
number

Required
token
string

Required
Refusal
object
A refusal from the model.


Hide properties
refusal
string

Required
The refusal explanation from the model.

type
string

Required
The type of the refusal. Always refusal.

id
string

Required
The unique ID of the output message.

role
string

Required
The role of the output message. Always assistant.

status
string

Required
The status of the message input. One of in_progress, completed, or incomplete. Populated when input items are returned via API.

type
string

Required
The type of the output message. Always message.

File search tool call
object
The results of a file search tool call. See the file search guide for more information.


Hide properties
id
string

Required
The unique ID of the file search tool call.

queries
array

Required
The queries used to search for files.

status
string

Required
The status of the file search tool call. One of in_progress, searching, incomplete or failed,

type
string

Required
The type of the file search tool call. Always file_search_call.

results
array or null

Optional
The results of the file search tool call.


Hide properties
attributes
map

Optional
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format, and querying for objects via API or the dashboard. Keys are strings with a maximum length of 64 characters. Values are strings with a maximum length of 512 characters, booleans, or numbers.

file_id
string

Optional
The unique ID of the file.

filename
string

Optional
The name of the file.

score
number

Optional
The relevance score of the file - a value between 0 and 1.

text
string

Optional
The text that was retrieved from the file.

Computer tool call
object
A tool call to a computer use tool. See the computer use guide for more information.


Hide properties
action
object

Required

Hide possible types
Click
object
A click action.


Hide properties
button
string

Required
Indicates which mouse button was pressed during the click. One of left, right, wheel, back, or forward.

type
string

Required
Specifies the event type. For a click action, this property is always set to click.

x
integer

Required
The x-coordinate where the click occurred.

y
integer

Required
The y-coordinate where the click occurred.

DoubleClick
object
A double click action.


Hide properties
type
string

Required
Specifies the event type. For a double click action, this property is always set to double_click.

x
integer

Required
The x-coordinate where the double click occurred.

y
integer

Required
The y-coordinate where the double click occurred.

Drag
object
A drag action.


Hide properties
path
array

Required
An array of coordinates representing the path of the drag action. Coordinates will appear as an array of objects, eg

[
  { x: 100, y: 200 },
  { x: 200, y: 300 }
]

Hide properties
x
integer

Required
The x-coordinate.

y
integer

Required
The y-coordinate.

type
string

Required
Specifies the event type. For a drag action, this property is always set to drag.

KeyPress
object
A collection of keypresses the model would like to perform.


Hide properties
keys
array

Required
The combination of keys the model is requesting to be pressed. This is an array of strings, each representing a key.

type
string

Required
Specifies the event type. For a keypress action, this property is always set to keypress.

Move
object
A mouse move action.


Hide properties
type
string

Required
Specifies the event type. For a move action, this property is always set to move.

x
integer

Required
The x-coordinate to move to.

y
integer

Required
The y-coordinate to move to.

Screenshot
object
A screenshot action.


Hide properties
type
string

Required
Specifies the event type. For a screenshot action, this property is always set to screenshot.

Scroll
object
A scroll action.


Hide properties
scroll_x
integer

Required
The horizontal scroll distance.

scroll_y
integer

Required
The vertical scroll distance.

type
string

Required
Specifies the event type. For a scroll action, this property is always set to scroll.

x
integer

Required
The x-coordinate where the scroll occurred.

y
integer

Required
The y-coordinate where the scroll occurred.

Type
object
An action to type in text.


Hide properties
text
string

Required
The text to type.

type
string

Required
Specifies the event type. For a type action, this property is always set to type.

Wait
object
A wait action.


Hide properties
type
string

Required
Specifies the event type. For a wait action, this property is always set to wait.

call_id
string

Required
An identifier used when responding to the tool call with output.

id
string

Required
The unique ID of the computer call.

pending_safety_checks
array

Required
The pending safety checks for the computer call.


Hide properties
code
string

Required
The type of the pending safety check.

id
string

Required
The ID of the pending safety check.

message
string

Required
Details about the pending safety check.

status
string

Required
The status of the item. One of in_progress, completed, or incomplete. Populated when items are returned via API.

type
string

Required
The type of the computer call. Always computer_call.

Computer tool call output
object
The output of a computer tool call.


Hide properties
call_id
string

Required
The ID of the computer tool call that produced the output.

output
object

Required
A computer screenshot image used with the computer use tool.


Hide properties
type
string

Required
Specifies the event type. For a computer screenshot, this property is always set to computer_screenshot.

file_id
string

Optional
The identifier of an uploaded file that contains the screenshot.

image_url
string

Optional
The URL of the screenshot image.

type
string

Required
The type of the computer tool call output. Always computer_call_output.

acknowledged_safety_checks
array

Optional
The safety checks reported by the API that have been acknowledged by the developer.


Hide properties
id
string

Required
The ID of the pending safety check.

code
string

Optional
The type of the pending safety check.

message
string

Optional
Details about the pending safety check.

id
string

Optional
The ID of the computer tool call output.

status
string

Optional
The status of the message input. One of in_progress, completed, or incomplete. Populated when input items are returned via API.

Web search tool call
object
The results of a web search tool call. See the web search guide for more information.


Hide properties
action
object

Required
An object describing the specific action taken in this web search call. Includes details on how the model used the web (search, open_page, find).


Hide possible types
Search action
object
Action type "search" - Performs a web search query.


Hide properties
query
string

Required
The search query.

type
string

Required
The action type.

sources
array

Optional
The sources used in the search.


Hide properties
type
string

Required
The type of source. Always url.

url
string

Required
The URL of the source.

Open page action
object
Action type "open_page" - Opens a specific URL from search results.


Hide properties
type
string

Required
The action type.

url
string

Required
The URL opened by the model.

Find action
object
Action type "find": Searches for a pattern within a loaded page.


Hide properties
pattern
string

Required
The pattern or text to search for within the page.

type
string

Required
The action type.

url
string

Required
The URL of the page searched for the pattern.

id
string

Required
The unique ID of the web search tool call.

status
string

Required
The status of the web search tool call.

type
string

Required
The type of the web search tool call. Always web_search_call.

Function tool call
object
A tool call to run a function. See the function calling guide for more information.


Hide properties
arguments
string

Required
A JSON string of the arguments to pass to the function.

call_id
string

Required
The unique ID of the function tool call generated by the model.

name
string

Required
The name of the function to run.

type
string

Required
The type of the function tool call. Always function_call.

id
string

Optional
The unique ID of the function tool call.

status
string

Optional
The status of the item. One of in_progress, completed, or incomplete. Populated when items are returned via API.

Function tool call output
object
The output of a function tool call.


Hide properties
call_id
string

Required
The unique ID of the function tool call generated by the model.

output
string

Required
A JSON string of the output of the function tool call.

type
string

Required
The type of the function tool call output. Always function_call_output.

id
string

Optional
The unique ID of the function tool call output. Populated when this item is returned via API.

status
string

Optional
The status of the item. One of in_progress, completed, or incomplete. Populated when items are returned via API.

Reasoning
object
A description of the chain of thought used by a reasoning model while generating a response. Be sure to include these items in your input to the Responses API for subsequent turns of a conversation if you are manually managing context.


Hide properties
id
string

Required
The unique identifier of the reasoning content.

summary
array

Required
Reasoning summary content.


Hide properties
text
string

Required
A summary of the reasoning output from the model so far.

type
string

Required
The type of the object. Always summary_text.

type
string

Required
The type of the object. Always reasoning.

content
array

Optional
Reasoning text content.


Hide properties
text
string

Required
Reasoning text output from the model.

type
string

Required
The type of the object. Always reasoning_text.

encrypted_content
string or null

Optional
The encrypted content of the reasoning item - populated when a response is generated with reasoning.encrypted_content in the include parameter.

status
string

Optional
The status of the item. One of in_progress, completed, or incomplete. Populated when items are returned via API.

Image generation call
object
An image generation request made by the model.


Hide properties
id
string

Required
The unique ID of the image generation call.

result
string or null

Required
The generated image encoded in base64.

status
string

Required
The status of the image generation call.

type
string

Required
The type of the image generation call. Always image_generation_call.

Code interpreter tool call
object
A tool call to run code.


Hide properties
code
string or null

Required
The code to run, or null if not available.

container_id
string

Required
The ID of the container used to run the code.

id
string

Required
The unique ID of the code interpreter tool call.

outputs
array or null

Required
The outputs generated by the code interpreter, such as logs or images. Can be null if no outputs are available.


Hide possible types
Code interpreter output logs
object
The logs output from the code interpreter.


Hide properties
logs
string

Required
The logs output from the code interpreter.

type
string

Required
The type of the output. Always 'logs'.

Code interpreter output image
object
The image output from the code interpreter.


Hide properties
type
string

Required
The type of the output. Always 'image'.

url
string

Required
The URL of the image output from the code interpreter.

status
string

Required
The status of the code interpreter tool call. Valid values are in_progress, completed, incomplete, interpreting, and failed.

type
string

Required
The type of the code interpreter tool call. Always code_interpreter_call.

Local shell call
object
A tool call to run a command on the local shell.


Hide properties
action
object

Required
Execute a shell command on the server.


Hide properties
command
array

Required
The command to run.

env
object

Required
Environment variables to set for the command.

type
string

Required
The type of the local shell action. Always exec.

timeout_ms
integer or null

Optional
Optional timeout in milliseconds for the command.

user
string or null

Optional
Optional user to run the command as.

working_directory
string or null

Optional
Optional working directory to run the command in.

call_id
string

Required
The unique ID of the local shell tool call generated by the model.

id
string

Required
The unique ID of the local shell call.

status
string

Required
The status of the local shell call.

type
string

Required
The type of the local shell call. Always local_shell_call.

Local shell call output
object
The output of a local shell tool call.


Hide properties
id
string

Required
The unique ID of the local shell tool call generated by the model.

output
string

Required
A JSON string of the output of the local shell tool call.

type
string

Required
The type of the local shell tool call output. Always local_shell_call_output.

status
string or null

Optional
The status of the item. One of in_progress, completed, or incomplete.

MCP list tools
object
A list of tools available on an MCP server.


Hide properties
id
string

Required
The unique ID of the list.

server_label
string

Required
The label of the MCP server.

tools
array

Required
The tools available on the server.


Hide properties
input_schema
object

Required
The JSON schema describing the tool's input.

name
string

Required
The name of the tool.

annotations
object or null

Optional
Additional annotations about the tool.

description
string or null

Optional
The description of the tool.

type
string

Required
The type of the item. Always mcp_list_tools.

error
string or null

Optional
Error message if the server could not list tools.

MCP approval request
object
A request for human approval of a tool invocation.


Hide properties
arguments
string

Required
A JSON string of arguments for the tool.

id
string

Required
The unique ID of the approval request.

name
string

Required
The name of the tool to run.

server_label
string

Required
The label of the MCP server making the request.

type
string

Required
The type of the item. Always mcp_approval_request.

MCP approval response
object
A response to an MCP approval request.


Hide properties
approval_request_id
string

Required
The ID of the approval request being answered.

approve
boolean

Required
Whether the request was approved.

type
string

Required
The type of the item. Always mcp_approval_response.

id
string or null

Optional
The unique ID of the approval response

reason
string or null

Optional
Optional reason for the decision.

MCP tool call
object
An invocation of a tool on an MCP server.


Hide properties
arguments
string

Required
A JSON string of the arguments passed to the tool.

id
string

Required
The unique ID of the tool call.

name
string

Required
The name of the tool that was run.

server_label
string

Required
The label of the MCP server running the tool.

type
string

Required
The type of the item. Always mcp_call.

error
string or null

Optional
The error from the tool call, if any.

output
string or null

Optional
The output from the tool call.

Custom tool call output
object
The output of a custom tool call from your code, being sent back to the model.


Hide properties
call_id
string

Required
The call ID, used to map this custom tool call output to a custom tool call.

output
string

Required
The output from the custom tool call generated by your code.

type
string

Required
The type of the custom tool call output. Always custom_tool_call_output.

id
string

Optional
The unique ID of the custom tool call output in the OpenAI platform.

Custom tool call
object
A call to a custom tool created by the model.


Hide properties
call_id
string

Required
An identifier used to map this custom tool call to a tool call output.

input
string

Required
The input for the custom tool call generated by the model.

name
string

Required
The name of the custom tool being called.

type
string

Required
The type of the custom tool call. Always custom_tool_call.

id
string

Optional
The unique ID of the custom tool call in the OpenAI platform.

Item reference
object
An internal identifier for an item to reference.


Hide properties
id
string

Required
The ID of the item to reference.

type
string

Optional
Defaults to item_reference
The type of item to reference. Always item_reference.

metadata
map

Optional
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format, and querying for objects via API or the dashboard.

Keys are strings with a maximum length of 64 characters. Values are strings with a maximum length of 512 characters.

Returns
Returns a Conversation object.

Example request
curl https://api.openai.com/v1/conversations \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $OPENAI_API_KEY" \
  -d '{
    "metadata": {"topic": "demo"},
    "items": [
      {
        "type": "message",
        "role": "user",
        "content": "Hello!"
      }
    ]
  }'
Response
{
  "id": "conv_123",
  "object": "conversation",
  "created_at": 1741900000,
  "metadata": {"topic": "demo"}
}
Retrieve a conversation
get
 
https://api.openai.com/v1/conversations/{conversation_id}
Get a conversation with the given ID.

Path parameters
conversation_id
string

Required
The ID of the conversation to retrieve.

Returns
Returns a Conversation object.

Example request
curl https://api.openai.com/v1/conversations/conv_123 \
  -H "Authorization: Bearer $OPENAI_API_KEY"
Response
{
  "id": "conv_123",
  "object": "conversation",
  "created_at": 1741900000,
  "metadata": {"topic": "demo"}
}
Update a conversation
post
 
https://api.openai.com/v1/conversations/{conversation_id}
Update a conversation's metadata with the given ID.

Path parameters
conversation_id
string

Required
The ID of the conversation to update.

Request body
metadata
object

Required
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format, and querying for objects via API or the dashboard. Keys are strings with a maximum length of 64 characters. Values are strings with a maximum length of 512 characters.

Returns
Returns the updated Conversation object.

Example request
curl https://api.openai.com/v1/conversations/conv_123 \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $OPENAI_API_KEY" \
  -d '{
    "metadata": {"topic": "project-x"}
  }'
Response
{
  "id": "conv_123",
  "object": "conversation",
  "created_at": 1741900000,
  "metadata": {"topic": "project-x"}
}
Delete a conversation
delete
 
https://api.openai.com/v1/conversations/{conversation_id}
Delete a conversation with the given ID.

Path parameters
conversation_id
string

Required
The ID of the conversation to delete.

Returns
A success message.

Example request
curl -X DELETE https://api.openai.com/v1/conversations/conv_123 \
  -H "Authorization: Bearer $OPENAI_API_KEY"
Response
{
  "id": "conv_123",
  "object": "conversation.deleted",
  "deleted": true
}
List items
get
 
https://api.openai.com/v1/conversations/{conversation_id}/items
List all items for a conversation with the given ID.

Path parameters
conversation_id
string

Required
The ID of the conversation to list items for.

Query parameters
after
string

Optional
An item ID to list items after, used in pagination.

include
array

Optional
Specify additional output data to include in the model response. Currently supported values are:

web_search_call.action.sources: Include the sources of the web search tool call.
code_interpreter_call.outputs: Includes the outputs of python code execution in code interpreter tool call items.
computer_call_output.output.image_url: Include image urls from the computer call output.
file_search_call.results: Include the search results of the file search tool call.
message.input_image.image_url: Include image urls from the input message.
message.output_text.logprobs: Include logprobs with assistant messages.
reasoning.encrypted_content: Includes an encrypted version of reasoning tokens in reasoning item outputs. This enables reasoning items to be used in multi-turn conversations when using the Responses API statelessly (like when the store parameter is set to false, or when an organization is enrolled in the zero data retention program).
limit
integer

Optional
Defaults to 20
A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.

order
string

Optional
The order to return the input items in. Default is desc.

asc: Return the input items in ascending order.
desc: Return the input items in descending order.
Returns
Returns a list object containing Conversation items.

Example request
curl "https://api.openai.com/v1/conversations/conv_123/items?limit=10" \
  -H "Authorization: Bearer $OPENAI_API_KEY"
Response
{
  "object": "list",
  "data": [
    {
      "type": "message",
      "id": "msg_abc",
      "status": "completed",
      "role": "user",
      "content": [
        {"type": "input_text", "text": "Hello!"}
      ]
    }
  ],
  "first_id": "msg_abc",
  "last_id": "msg_abc",
  "has_more": false
}
Create items
post
 
https://api.openai.com/v1/conversations/{conversation_id}/items
Create items in a conversation with the given ID.

Path parameters
conversation_id
string

Required
The ID of the conversation to add the item to.

Query parameters
include
array

Optional
Additional fields to include in the response. See the include parameter for listing Conversation items above for more information.

Request body
items
array

Required
The items to add to the conversation. You may add up to 20 items at a time.


Hide possible types
Input message
object
A message input to the model with a role indicating instruction following hierarchy. Instructions given with the developer or system role take precedence over instructions given with the user role. Messages with the assistant role are presumed to have been generated by the model in previous interactions.


Hide properties
content
string or array

Required
Text, image, or audio input to the model, used to generate a response. Can also contain previous assistant responses.


Show possible types
role
string

Required
The role of the message input. One of user, assistant, system, or developer.

type
string

Optional
The type of the message input. Always message.

Item
object
An item representing part of the context for the response to be generated by the model. Can contain text, images, and audio inputs, as well as previous assistant responses and tool call outputs.


Hide possible types
Input message
object
A message input to the model with a role indicating instruction following hierarchy. Instructions given with the developer or system role take precedence over instructions given with the user role.


Hide properties
content
array

Required
A list of one or many input items to the model, containing different content types.


Hide possible types
Input text
object
A text input to the model.


Hide properties
text
string

Required
The text input to the model.

type
string

Required
The type of the input item. Always input_text.

Input image
object
An image input to the model. Learn about image inputs.


Hide properties
detail
string

Required
The detail level of the image to be sent to the model. One of high, low, or auto. Defaults to auto.

type
string

Required
The type of the input item. Always input_image.

file_id
string

Optional
The ID of the file to be sent to the model.

image_url
string

Optional
The URL of the image to be sent to the model. A fully qualified URL or base64 encoded image in a data URL.

Input file
object
A file input to the model.


Hide properties
type
string

Required
The type of the input item. Always input_file.

file_data
string

Optional
The content of the file to be sent to the model.

file_id
string

Optional
The ID of the file to be sent to the model.

file_url
string

Optional
The URL of the file to be sent to the model.

filename
string

Optional
The name of the file to be sent to the model.

Input audio
object
An audio input to the model.


Hide properties
input_audio
object

Required

Hide properties
data
string

Required
Base64-encoded audio data.

format
string

Required
The format of the audio data. Currently supported formats are mp3 and wav.

type
string

Required
The type of the input item. Always input_audio.

role
string

Required
The role of the message input. One of user, system, or developer.

status
string

Optional
The status of item. One of in_progress, completed, or incomplete. Populated when items are returned via API.

type
string

Optional
The type of the message input. Always set to message.

Output message
object
An output message from the model.


Hide properties
content
array

Required
The content of the output message.


Hide possible types
Output text
object
A text output from the model.


Hide properties
annotations
array

Required
The annotations of the text output.


Hide possible types
File citation
object
A citation to a file.


Hide properties
file_id
string

Required
The ID of the file.

filename
string

Required
The filename of the file cited.

index
integer

Required
The index of the file in the list of files.

type
string

Required
The type of the file citation. Always file_citation.

URL citation
object
A citation for a web resource used to generate a model response.


Hide properties
end_index
integer

Required
The index of the last character of the URL citation in the message.

start_index
integer

Required
The index of the first character of the URL citation in the message.

title
string

Required
The title of the web resource.

type
string

Required
The type of the URL citation. Always url_citation.

url
string

Required
The URL of the web resource.

Container file citation
object
A citation for a container file used to generate a model response.


Hide properties
container_id
string

Required
The ID of the container file.

end_index
integer

Required
The index of the last character of the container file citation in the message.

file_id
string

Required
The ID of the file.

filename
string

Required
The filename of the container file cited.

start_index
integer

Required
The index of the first character of the container file citation in the message.

type
string

Required
The type of the container file citation. Always container_file_citation.

File path
object
A path to a file.


Hide properties
file_id
string

Required
The ID of the file.

index
integer

Required
The index of the file in the list of files.

type
string

Required
The type of the file path. Always file_path.

text
string

Required
The text output from the model.

type
string

Required
The type of the output text. Always output_text.

logprobs
array

Optional

Hide properties
bytes
array

Required
logprob
number

Required
token
string

Required
top_logprobs
array

Required

Hide properties
bytes
array

Required
logprob
number

Required
token
string

Required
Refusal
object
A refusal from the model.


Hide properties
refusal
string

Required
The refusal explanation from the model.

type
string

Required
The type of the refusal. Always refusal.

id
string

Required
The unique ID of the output message.

role
string

Required
The role of the output message. Always assistant.

status
string

Required
The status of the message input. One of in_progress, completed, or incomplete. Populated when input items are returned via API.

type
string

Required
The type of the output message. Always message.

File search tool call
object
The results of a file search tool call. See the file search guide for more information.


Hide properties
id
string

Required
The unique ID of the file search tool call.

queries
array

Required
The queries used to search for files.

status
string

Required
The status of the file search tool call. One of in_progress, searching, incomplete or failed,

type
string

Required
The type of the file search tool call. Always file_search_call.

results
array or null

Optional
The results of the file search tool call.


Hide properties
attributes
map

Optional
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format, and querying for objects via API or the dashboard. Keys are strings with a maximum length of 64 characters. Values are strings with a maximum length of 512 characters, booleans, or numbers.

file_id
string

Optional
The unique ID of the file.

filename
string

Optional
The name of the file.

score
number

Optional
The relevance score of the file - a value between 0 and 1.

text
string

Optional
The text that was retrieved from the file.

Computer tool call
object
A tool call to a computer use tool. See the computer use guide for more information.


Hide properties
action
object

Required

Hide possible types
Click
object
A click action.


Hide properties
button
string

Required
Indicates which mouse button was pressed during the click. One of left, right, wheel, back, or forward.

type
string

Required
Specifies the event type. For a click action, this property is always set to click.

x
integer

Required
The x-coordinate where the click occurred.

y
integer

Required
The y-coordinate where the click occurred.

DoubleClick
object
A double click action.


Hide properties
type
string

Required
Specifies the event type. For a double click action, this property is always set to double_click.

x
integer

Required
The x-coordinate where the double click occurred.

y
integer

Required
The y-coordinate where the double click occurred.

Drag
object
A drag action.


Hide properties
path
array

Required
An array of coordinates representing the path of the drag action. Coordinates will appear as an array of objects, eg

[
  { x: 100, y: 200 },
  { x: 200, y: 300 }
]

Hide properties
x
integer

Required
The x-coordinate.

y
integer

Required
The y-coordinate.

type
string

Required
Specifies the event type. For a drag action, this property is always set to drag.

KeyPress
object
A collection of keypresses the model would like to perform.


Hide properties
keys
array

Required
The combination of keys the model is requesting to be pressed. This is an array of strings, each representing a key.

type
string

Required
Specifies the event type. For a keypress action, this property is always set to keypress.

Move
object
A mouse move action.


Hide properties
type
string

Required
Specifies the event type. For a move action, this property is always set to move.

x
integer

Required
The x-coordinate to move to.

y
integer

Required
The y-coordinate to move to.

Screenshot
object
A screenshot action.


Hide properties
type
string

Required
Specifies the event type. For a screenshot action, this property is always set to screenshot.

Scroll
object
A scroll action.


Hide properties
scroll_x
integer

Required
The horizontal scroll distance.

scroll_y
integer

Required
The vertical scroll distance.

type
string

Required
Specifies the event type. For a scroll action, this property is always set to scroll.

x
integer

Required
The x-coordinate where the scroll occurred.

y
integer

Required
The y-coordinate where the scroll occurred.

Type
object
An action to type in text.


Hide properties
text
string

Required
The text to type.

type
string

Required
Specifies the event type. For a type action, this property is always set to type.

Wait
object
A wait action.


Hide properties
type
string

Required
Specifies the event type. For a wait action, this property is always set to wait.

call_id
string

Required
An identifier used when responding to the tool call with output.

id
string

Required
The unique ID of the computer call.

pending_safety_checks
array

Required
The pending safety checks for the computer call.


Hide properties
code
string

Required
The type of the pending safety check.

id
string

Required
The ID of the pending safety check.

message
string

Required
Details about the pending safety check.

status
string

Required
The status of the item. One of in_progress, completed, or incomplete. Populated when items are returned via API.

type
string

Required
The type of the computer call. Always computer_call.

Computer tool call output
object
The output of a computer tool call.


Hide properties
call_id
string

Required
The ID of the computer tool call that produced the output.

output
object

Required
A computer screenshot image used with the computer use tool.


Hide properties
type
string

Required
Specifies the event type. For a computer screenshot, this property is always set to computer_screenshot.

file_id
string

Optional
The identifier of an uploaded file that contains the screenshot.

image_url
string

Optional
The URL of the screenshot image.

type
string

Required
The type of the computer tool call output. Always computer_call_output.

acknowledged_safety_checks
array

Optional
The safety checks reported by the API that have been acknowledged by the developer.


Hide properties
id
string

Required
The ID of the pending safety check.

code
string

Optional
The type of the pending safety check.

message
string

Optional
Details about the pending safety check.

id
string

Optional
The ID of the computer tool call output.

status
string

Optional
The status of the message input. One of in_progress, completed, or incomplete. Populated when input items are returned via API.

Web search tool call
object
The results of a web search tool call. See the web search guide for more information.


Hide properties
action
object

Required
An object describing the specific action taken in this web search call. Includes details on how the model used the web (search, open_page, find).


Hide possible types
Search action
object
Action type "search" - Performs a web search query.


Hide properties
query
string

Required
The search query.

type
string

Required
The action type.

sources
array

Optional
The sources used in the search.


Hide properties
type
string

Required
The type of source. Always url.

url
string

Required
The URL of the source.

Open page action
object
Action type "open_page" - Opens a specific URL from search results.


Hide properties
type
string

Required
The action type.

url
string

Required
The URL opened by the model.

Find action
object
Action type "find": Searches for a pattern within a loaded page.


Hide properties
pattern
string

Required
The pattern or text to search for within the page.

type
string

Required
The action type.

url
string

Required
The URL of the page searched for the pattern.

id
string

Required
The unique ID of the web search tool call.

status
string

Required
The status of the web search tool call.

type
string

Required
The type of the web search tool call. Always web_search_call.

Function tool call
object
A tool call to run a function. See the function calling guide for more information.


Hide properties
arguments
string

Required
A JSON string of the arguments to pass to the function.

call_id
string

Required
The unique ID of the function tool call generated by the model.

name
string

Required
The name of the function to run.

type
string

Required
The type of the function tool call. Always function_call.

id
string

Optional
The unique ID of the function tool call.

status
string

Optional
The status of the item. One of in_progress, completed, or incomplete. Populated when items are returned via API.

Function tool call output
object
The output of a function tool call.


Hide properties
call_id
string

Required
The unique ID of the function tool call generated by the model.

output
string

Required
A JSON string of the output of the function tool call.

type
string

Required
The type of the function tool call output. Always function_call_output.

id
string

Optional
The unique ID of the function tool call output. Populated when this item is returned via API.

status
string

Optional
The status of the item. One of in_progress, completed, or incomplete. Populated when items are returned via API.

Reasoning
object
A description of the chain of thought used by a reasoning model while generating a response. Be sure to include these items in your input to the Responses API for subsequent turns of a conversation if you are manually managing context.


Hide properties
id
string

Required
The unique identifier of the reasoning content.

summary
array

Required
Reasoning summary content.


Hide properties
text
string

Required
A summary of the reasoning output from the model so far.

type
string

Required
The type of the object. Always summary_text.

type
string

Required
The type of the object. Always reasoning.

content
array

Optional
Reasoning text content.


Hide properties
text
string

Required
Reasoning text output from the model.

type
string

Required
The type of the object. Always reasoning_text.

encrypted_content
string or null

Optional
The encrypted content of the reasoning item - populated when a response is generated with reasoning.encrypted_content in the include parameter.

status
string

Optional
The status of the item. One of in_progress, completed, or incomplete. Populated when items are returned via API.

Image generation call
object
An image generation request made by the model.


Hide properties
id
string

Required
The unique ID of the image generation call.

result
string or null

Required
The generated image encoded in base64.

status
string

Required
The status of the image generation call.

type
string

Required
The type of the image generation call. Always image_generation_call.

Code interpreter tool call
object
A tool call to run code.


Hide properties
code
string or null

Required
The code to run, or null if not available.

container_id
string

Required
The ID of the container used to run the code.

id
string

Required
The unique ID of the code interpreter tool call.

outputs
array or null

Required
The outputs generated by the code interpreter, such as logs or images. Can be null if no outputs are available.


Hide possible types
Code interpreter output logs
object
The logs output from the code interpreter.


Hide properties
logs
string

Required
The logs output from the code interpreter.

type
string

Required
The type of the output. Always 'logs'.

Code interpreter output image
object
The image output from the code interpreter.


Hide properties
type
string

Required
The type of the output. Always 'image'.

url
string

Required
The URL of the image output from the code interpreter.

status
string

Required
The status of the code interpreter tool call. Valid values are in_progress, completed, incomplete, interpreting, and failed.

type
string

Required
The type of the code interpreter tool call. Always code_interpreter_call.

Local shell call
object
A tool call to run a command on the local shell.


Hide properties
action
object

Required
Execute a shell command on the server.


Hide properties
command
array

Required
The command to run.

env
object

Required
Environment variables to set for the command.

type
string

Required
The type of the local shell action. Always exec.

timeout_ms
integer or null

Optional
Optional timeout in milliseconds for the command.

user
string or null

Optional
Optional user to run the command as.

working_directory
string or null

Optional
Optional working directory to run the command in.

call_id
string

Required
The unique ID of the local shell tool call generated by the model.

id
string

Required
The unique ID of the local shell call.

status
string

Required
The status of the local shell call.

type
string

Required
The type of the local shell call. Always local_shell_call.

Local shell call output
object
The output of a local shell tool call.


Hide properties
id
string

Required
The unique ID of the local shell tool call generated by the model.

output
string

Required
A JSON string of the output of the local shell tool call.

type
string

Required
The type of the local shell tool call output. Always local_shell_call_output.

status
string or null

Optional
The status of the item. One of in_progress, completed, or incomplete.

MCP list tools
object
A list of tools available on an MCP server.


Hide properties
id
string

Required
The unique ID of the list.

server_label
string

Required
The label of the MCP server.

tools
array

Required
The tools available on the server.


Hide properties
input_schema
object

Required
The JSON schema describing the tool's input.

name
string

Required
The name of the tool.

annotations
object or null

Optional
Additional annotations about the tool.

description
string or null

Optional
The description of the tool.

type
string

Required
The type of the item. Always mcp_list_tools.

error
string or null

Optional
Error message if the server could not list tools.

MCP approval request
object
A request for human approval of a tool invocation.


Hide properties
arguments
string

Required
A JSON string of arguments for the tool.

id
string

Required
The unique ID of the approval request.

name
string

Required
The name of the tool to run.

server_label
string

Required
The label of the MCP server making the request.

type
string

Required
The type of the item. Always mcp_approval_request.

MCP approval response
object
A response to an MCP approval request.


Hide properties
approval_request_id
string

Required
The ID of the approval request being answered.

approve
boolean

Required
Whether the request was approved.

type
string

Required
The type of the item. Always mcp_approval_response.

id
string or null

Optional
The unique ID of the approval response

reason
string or null

Optional
Optional reason for the decision.

MCP tool call
object
An invocation of a tool on an MCP server.


Hide properties
arguments
string

Required
A JSON string of the arguments passed to the tool.

id
string

Required
The unique ID of the tool call.

name
string

Required
The name of the tool that was run.

server_label
string

Required
The label of the MCP server running the tool.

type
string

Required
The type of the item. Always mcp_call.

error
string or null

Optional
The error from the tool call, if any.

output
string or null

Optional
The output from the tool call.

Custom tool call output
object
The output of a custom tool call from your code, being sent back to the model.


Hide properties
call_id
string

Required
The call ID, used to map this custom tool call output to a custom tool call.

output
string

Required
The output from the custom tool call generated by your code.

type
string

Required
The type of the custom tool call output. Always custom_tool_call_output.

id
string

Optional
The unique ID of the custom tool call output in the OpenAI platform.

Custom tool call
object
A call to a custom tool created by the model.


Hide properties
call_id
string

Required
An identifier used to map this custom tool call to a tool call output.

input
string

Required
The input for the custom tool call generated by the model.

name
string

Required
The name of the custom tool being called.

type
string

Required
The type of the custom tool call. Always custom_tool_call.

id
string

Optional
The unique ID of the custom tool call in the OpenAI platform.

Item reference
object
An internal identifier for an item to reference.


Hide properties
id
string

Required
The ID of the item to reference.

type
string

Optional
Defaults to item_reference
The type of item to reference. Always item_reference.

Returns
Returns the list of added items.

Example request
curl https://api.openai.com/v1/conversations/conv_123/items \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $OPENAI_API_KEY" \
  -d '{
    "items": [
      {
        "type": "message",
        "role": "user",
        "content": [
          {"type": "input_text", "text": "Hello!"}
        ]
      },
      {
        "type": "message",
        "role": "user",
        "content": [
          {"type": "input_text", "text": "How are you?"}
        ]
      }
    ]
  }'
Response
{
  "object": "list",
  "data": [
    {
      "type": "message",
      "id": "msg_abc",
      "status": "completed",
      "role": "user",
      "content": [
        {"type": "input_text", "text": "Hello!"}
      ]
    },
    {
      "type": "message",
      "id": "msg_def",
      "status": "completed",
      "role": "user",
      "content": [
        {"type": "input_text", "text": "How are you?"}
      ]
    }
  ],
  "first_id": "msg_abc",
  "last_id": "msg_def",
  "has_more": false
}
Retrieve an item
get
 
https://api.openai.com/v1/conversations/{conversation_id}/items/{item_id}
Get a single item from a conversation with the given IDs.

Path parameters
conversation_id
string

Required
The ID of the conversation that contains the item.

item_id
string

Required
The ID of the item to retrieve.

Query parameters
include
array

Optional
Additional fields to include in the response. See the include parameter for listing Conversation items above for more information.

Returns
Returns a Conversation Item.

Example request
curl https://api.openai.com/v1/conversations/conv_123/items/msg_abc \
  -H "Authorization: Bearer $OPENAI_API_KEY"
Response
{
  "type": "message",
  "id": "msg_abc",
  "status": "completed",
  "role": "user",
  "content": [
    {"type": "input_text", "text": "Hello!"}
  ]
}
Delete an item
delete
 
https://api.openai.com/v1/conversations/{conversation_id}/items/{item_id}
Delete an item from a conversation with the given IDs.

Path parameters
conversation_id
string

Required
The ID of the conversation that contains the item.

item_id
string

Required
The ID of the item to delete.

Returns
Returns the updated Conversation object.

Example request
curl -X DELETE https://api.openai.com/v1/conversations/conv_123/items/msg_abc \
  -H "Authorization: Bearer $OPENAI_API_KEY"
Response
{
  "id": "conv_123",
  "object": "conversation",
  "created_at": 1741900000,
  "metadata": {"topic": "demo"}
}
The conversation object
created_at
integer

The time at which the conversation was created, measured in seconds since the Unix epoch.

id
string

The unique ID of the conversation.

metadata
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format, and querying for objects via API or the dashboard. Keys are strings with a maximum length of 64 characters. Values are strings with a maximum length of 512 characters.

object
string

The object type, which is always conversation.

The item list
A list of Conversation items.

data
array

A list of conversation items.


Hide possible types
Message
object

Hide properties
content
array

The content of the message


Hide possible types
Input text
object

Hide properties
text
string

The text input to the model.

type
string

The type of the input item. Always input_text.

Output text
object

Hide properties
annotations
array

The annotations of the text output.


Hide possible types
File citation
object

Hide properties
file_id
string

The ID of the file.

filename
string

The filename of the file cited.

index
integer

The index of the file in the list of files.

type
string

The type of the file citation. Always file_citation.

URL citation
object

Hide properties
end_index
integer

The index of the last character of the URL citation in the message.

start_index
integer

The index of the first character of the URL citation in the message.

title
string

The title of the web resource.

type
string

The type of the URL citation. Always url_citation.

url
string

The URL of the web resource.

Container file citation
object

Hide properties
container_id
string

The ID of the container file.

end_index
integer

The index of the last character of the container file citation in the message.

file_id
string

The ID of the file.

filename
string

The filename of the container file cited.

start_index
integer

The index of the first character of the container file citation in the message.

type
string

The type of the container file citation. Always container_file_citation.

text
string

The text output from the model.

type
string

The type of the output text. Always output_text.

logprobs
array


Hide properties
bytes
array

logprob
number

token
string

top_logprobs
array


Hide properties
bytes
array

logprob
number

token
string

Text Content
object

Hide properties
text
string

type
string

Summary text
object

Hide properties
text
string

type
string

Refusal
object

Hide properties
refusal
string

The refusal explanation from the model.

type
string

The type of the refusal. Always refusal.

Input image
object

Hide properties
detail
string

The detail level of the image to be sent to the model. One of high, low, or auto. Defaults to auto.

file_id
string

The ID of the file to be sent to the model.

image_url
string

The URL of the image to be sent to the model. A fully qualified URL or base64 encoded image in a data URL.

type
string

The type of the input item. Always input_image.

Computer screenshot
object

Hide properties
file_id
string

The identifier of an uploaded file that contains the screenshot.

image_url
string

The URL of the screenshot image.

type
string

Specifies the event type. For a computer screenshot, this property is always set to computer_screenshot.

Input file
object

Hide properties
file_id
string

The ID of the file to be sent to the model.

type
string

The type of the input item. Always input_file.

file_url
string

The URL of the file to be sent to the model.

filename
string

The name of the file to be sent to the model.

id
string

The unique ID of the message.

role
string

The role of the message. One of unknown, user, assistant, system, critic, discriminator, developer, or tool.

status
string

The status of item. One of in_progress, completed, or incomplete. Populated when items are returned via API.

type
string

The type of the message. Always set to message.

Function tool call
object
A tool call to run a function. See the function calling guide for more information.


Hide properties
arguments
string

A JSON string of the arguments to pass to the function.

call_id
string

The unique ID of the function tool call generated by the model.

id
string

The unique ID of the function tool call.

name
string

The name of the function to run.

type
string

The type of the function tool call. Always function_call.

status
string

The status of the item. One of in_progress, completed, or incomplete. Populated when items are returned via API.

Function tool call output
object
The output of a function tool call.


Hide properties
call_id
string

The unique ID of the function tool call generated by the model.

id
string

The unique ID of the function call tool output.

output
string

A JSON string of the output of the function tool call.

type
string

The type of the function tool call output. Always function_call_output.

status
string

The status of the item. One of in_progress, completed, or incomplete. Populated when items are returned via API.

File search tool call
object
The results of a file search tool call. See the file search guide for more information.


Hide properties
id
string

The unique ID of the file search tool call.

queries
array

The queries used to search for files.

status
string

The status of the file search tool call. One of in_progress, searching, incomplete or failed,

type
string

The type of the file search tool call. Always file_search_call.

results
array or null

The results of the file search tool call.


Hide properties
attributes
map

Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format, and querying for objects via API or the dashboard. Keys are strings with a maximum length of 64 characters. Values are strings with a maximum length of 512 characters, booleans, or numbers.

file_id
string

The unique ID of the file.

filename
string

The name of the file.

score
number

The relevance score of the file - a value between 0 and 1.

text
string

The text that was retrieved from the file.

Web search tool call
object
The results of a web search tool call. See the web search guide for more information.


Hide properties
action
object

An object describing the specific action taken in this web search call. Includes details on how the model used the web (search, open_page, find).


Hide possible types
Search action
object
Action type "search" - Performs a web search query.


Hide properties
query
string

The search query.

type
string

The action type.

sources
array

The sources used in the search.


Hide properties
type
string

The type of source. Always url.

url
string

The URL of the source.

Open page action
object
Action type "open_page" - Opens a specific URL from search results.


Hide properties
type
string

The action type.

url
string

The URL opened by the model.

Find action
object
Action type "find": Searches for a pattern within a loaded page.


Hide properties
pattern
string

The pattern or text to search for within the page.

type
string

The action type.

url
string

The URL of the page searched for the pattern.

id
string

The unique ID of the web search tool call.

status
string

The status of the web search tool call.

type
string

The type of the web search tool call. Always web_search_call.

Image generation call
object
An image generation request made by the model.


Hide properties
id
string

The unique ID of the image generation call.

result
string or null

The generated image encoded in base64.

status
string

The status of the image generation call.

type
string

The type of the image generation call. Always image_generation_call.

Computer tool call
object
A tool call to a computer use tool. See the computer use guide for more information.


Hide properties
action
object


Hide possible types
Click
object
A click action.


Hide properties
button
string

Indicates which mouse button was pressed during the click. One of left, right, wheel, back, or forward.

type
string

Specifies the event type. For a click action, this property is always set to click.

x
integer

The x-coordinate where the click occurred.

y
integer

The y-coordinate where the click occurred.

DoubleClick
object
A double click action.


Hide properties
type
string

Specifies the event type. For a double click action, this property is always set to double_click.

x
integer

The x-coordinate where the double click occurred.

y
integer

The y-coordinate where the double click occurred.

Drag
object
A drag action.


Hide properties
path
array

An array of coordinates representing the path of the drag action. Coordinates will appear as an array of objects, eg

[
  { x: 100, y: 200 },
  { x: 200, y: 300 }
]

Hide properties
x
integer

The x-coordinate.

y
integer

The y-coordinate.

type
string

Specifies the event type. For a drag action, this property is always set to drag.

KeyPress
object
A collection of keypresses the model would like to perform.


Hide properties
keys
array

The combination of keys the model is requesting to be pressed. This is an array of strings, each representing a key.

type
string

Specifies the event type. For a keypress action, this property is always set to keypress.

Move
object
A mouse move action.


Hide properties
type
string

Specifies the event type. For a move action, this property is always set to move.

x
integer

The x-coordinate to move to.

y
integer

The y-coordinate to move to.

Screenshot
object
A screenshot action.


Hide properties
type
string

Specifies the event type. For a screenshot action, this property is always set to screenshot.

Scroll
object
A scroll action.


Hide properties
scroll_x
integer

The horizontal scroll distance.

scroll_y
integer

The vertical scroll distance.

type
string

Specifies the event type. For a scroll action, this property is always set to scroll.

x
integer

The x-coordinate where the scroll occurred.

y
integer

The y-coordinate where the scroll occurred.

Type
object
An action to type in text.


Hide properties
text
string

The text to type.

type
string

Specifies the event type. For a type action, this property is always set to type.

Wait
object
A wait action.


Hide properties
type
string

Specifies the event type. For a wait action, this property is always set to wait.

call_id
string

An identifier used when responding to the tool call with output.

id
string

The unique ID of the computer call.

pending_safety_checks
array

The pending safety checks for the computer call.


Show properties
status
string

The status of the item. One of in_progress, completed, or incomplete. Populated when items are returned via API.

type
string

The type of the computer call. Always computer_call.

Computer tool call output
object
The output of a computer tool call.


Hide properties
call_id
string

The ID of the computer tool call that produced the output.

id
string

The unique ID of the computer call tool output.

output
object

A computer screenshot image used with the computer use tool.


Hide properties
type
string

Specifies the event type. For a computer screenshot, this property is always set to computer_screenshot.

file_id
string

The identifier of an uploaded file that contains the screenshot.

image_url
string

The URL of the screenshot image.

type
string

The type of the computer tool call output. Always computer_call_output.

acknowledged_safety_checks
array

The safety checks reported by the API that have been acknowledged by the developer.


Hide properties
code
string

The type of the pending safety check.

id
string

The ID of the pending safety check.

message
string

Details about the pending safety check.

status
string

The status of the message input. One of in_progress, completed, or incomplete. Populated when input items are returned via API.

Reasoning
object
A description of the chain of thought used by a reasoning model while generating a response. Be sure to include these items in your input to the Responses API for subsequent turns of a conversation if you are manually managing context.


Hide properties
id
string

The unique identifier of the reasoning content.

summary
array

Reasoning summary content.


Hide properties
text
string

A summary of the reasoning output from the model so far.

type
string

The type of the object. Always summary_text.

type
string

The type of the object. Always reasoning.

content
array

Reasoning text content.


Hide properties
text
string

Reasoning text output from the model.

type
string

The type of the object. Always reasoning_text.

encrypted_content
string or null

The encrypted content of the reasoning item - populated when a response is generated with reasoning.encrypted_content in the include parameter.

status
string

The status of the item. One of in_progress, completed, or incomplete. Populated when items are returned via API.

Code interpreter tool call
object
A tool call to run code.


Hide properties
code
string or null

The code to run, or null if not available.

container_id
string

The ID of the container used to run the code.

id
string

The unique ID of the code interpreter tool call.

outputs
array or null

The outputs generated by the code interpreter, such as logs or images. Can be null if no outputs are available.


Hide possible types
Code interpreter output logs
object
The logs output from the code interpreter.


Hide properties
logs
string

The logs output from the code interpreter.

type
string

The type of the output. Always 'logs'.

Code interpreter output image
object
The image output from the code interpreter.


Hide properties
type
string

The type of the output. Always 'image'.

url
string

The URL of the image output from the code interpreter.

status
string

The status of the code interpreter tool call. Valid values are in_progress, completed, incomplete, interpreting, and failed.

type
string

The type of the code interpreter tool call. Always code_interpreter_call.

Local shell call
object
A tool call to run a command on the local shell.


Hide properties
action
object

Execute a shell command on the server.


Hide properties
command
array

The command to run.

env
object

Environment variables to set for the command.

type
string

The type of the local shell action. Always exec.

timeout_ms
integer or null

Optional timeout in milliseconds for the command.

user
string or null

Optional user to run the command as.

working_directory
string or null

Optional working directory to run the command in.

call_id
string

The unique ID of the local shell tool call generated by the model.

id
string

The unique ID of the local shell call.

status
string

The status of the local shell call.

type
string

The type of the local shell call. Always local_shell_call.

Local shell call output
object
The output of a local shell tool call.


Hide properties
id
string

The unique ID of the local shell tool call generated by the model.

output
string

A JSON string of the output of the local shell tool call.

type
string

The type of the local shell tool call output. Always local_shell_call_output.

status
string or null

The status of the item. One of in_progress, completed, or incomplete.

MCP list tools
object
A list of tools available on an MCP server.


Hide properties
id
string

The unique ID of the list.

server_label
string

The label of the MCP server.

tools
array

The tools available on the server.


Hide properties
input_schema
object

The JSON schema describing the tool's input.

name
string

The name of the tool.

annotations
object or null

Additional annotations about the tool.

description
string or null

The description of the tool.

type
string

The type of the item. Always mcp_list_tools.

error
string or null

Error message if the server could not list tools.

MCP approval request
object
A request for human approval of a tool invocation.


Hide properties
arguments
string

A JSON string of arguments for the tool.

id
string

The unique ID of the approval request.

name
string

The name of the tool to run.

server_label
string

The label of the MCP server making the request.

type
string

The type of the item. Always mcp_approval_request.

MCP approval response
object
A response to an MCP approval request.


Hide properties
approval_request_id
string

The ID of the approval request being answered.

approve
boolean

Whether the request was approved.

id
string

The unique ID of the approval response

type
string

The type of the item. Always mcp_approval_response.

reason
string or null

Optional reason for the decision.

MCP tool call
object
An invocation of a tool on an MCP server.


Hide properties
arguments
string

A JSON string of the arguments passed to the tool.

id
string

The unique ID of the tool call.

name
string

The name of the tool that was run.

server_label
string

The label of the MCP server running the tool.

type
string

The type of the item. Always mcp_call.

error
string or null

The error from the tool call, if any.

output
string or null

The output from the tool call.

Custom tool call
object
A call to a custom tool created by the model.


Hide properties
call_id
string

An identifier used to map this custom tool call to a tool call output.

input
string

The input for the custom tool call generated by the model.

name
string

The name of the custom tool being called.

type
string

The type of the custom tool call. Always custom_tool_call.

id
string

The unique ID of the custom tool call in the OpenAI platform.

Custom tool call output
object
The output of a custom tool call from your code, being sent back to the model.


Hide properties
call_id
string

The call ID, used to map this custom tool call output to a custom tool call.

output
string

The output from the custom tool call generated by your code.

type
string

The type of the custom tool call output. Always custom_tool_call_output.

id
string

The unique ID of the custom tool call output in the OpenAI platform.

first_id
string

The ID of the first item in the list.

has_more
boolean

Whether there are more items available.

last_id
string

The ID of the last item in the list.

object
string

The type of object returned, must be list.